stages:
  - publish
<<<<<<< HEAD
  - publish-recette
=======
  - publish-fs
>>>>>>> main
  - deploy
  - deploy-fs

publish-front:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
      allow_failure: true  # to avoid blocked state
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  script:
    - touch .env && echo "VITE_API_URL=$SERVER_URL" > .env
    - cd . && docker build -t $CI_REGISTRY_IMAGE/front_albert:latest .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/front_albert:latest


publish-front-fs:
  rules:
    - if: $CI_COMMIT_BRANCH == "deployMFS" # to be changed, this should be managed in env variable
      when: manual
      allow_failure: true  # to avoid blocked state
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  script:
    - touch .env && echo "VITE_API_URL=$SERVER_RECETTE_URL" >> .env
    - cd . && docker build -t $CI_REGISTRY_IMAGE/front_albert_fs:latest .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/front_albert_fs:latest

deploy-front:
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
      allow_failure: true  # to avoid blocked state
  image: alpine:latest
  stage: deploy
  environment:
    name: production
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $CI_REGISTRY_IMAGE/front_albert:latest"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f miaou-front-albert || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run  -d -p 4174:4173   --name miaou-front-albert $CI_REGISTRY_IMAGE/front_albert:latest"


deploy-front-fs:
  rules:
    - if: $CI_COMMIT_BRANCH == "deployMFS" # to be changed, this should be managed in env variable
      when: manual
      allow_failure: true  # to avoid blocked state
  image: alpine:latest
  stage: deploy-fs
  environment:
    name: fs
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_RECETTE@$SERVER_IP_RECETTE "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_RECETTE@$SERVER_IP_RECETTE "docker pull $CI_REGISTRY_IMAGE/front_albert_fs:latest"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_RECETTE@$SERVER_IP_RECETTE "docker container rm -f miaou-front-albert || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_RECETTE@$SERVER_IP_RECETTE "docker container rm -f miaou-front-albert_fs || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER_RECETTE@$SERVER_IP_RECETTE "docker run -d -p 4174:4173 -e VITE_API_URL=$SERVER_RECETTE_URL --name miaou-front-albert_fs  $CI_REGISTRY_IMAGE/front_albert_fs:latest "
